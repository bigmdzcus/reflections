How did viewing a diff between two versions help you spot the bug?

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

How can you use the commands git log and git diff to view the history of files?

How might using version control make you more confident to make changes that could break something?

Now that you have your workspace set up, what do you want to try using Git for?

How do the diagrams help you visualize the branch structure?
help to visualiza and understand better the flow of the commits.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
By merging 2 branches you will have changes made from 2 different participants int he code writing

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
